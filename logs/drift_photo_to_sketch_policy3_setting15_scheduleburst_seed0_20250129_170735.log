/home/apiasecz/.conda/envs/cog_fl_llm_env/lib/python3.12/site-packages/torch/nn/modules/conv.py:456: UserWarning: Plan failed with a cudnnException: CUDNN_BACKEND_EXECUTION_PLAN_DESCRIPTOR: cudnnFinalize Descriptor Failed cudnn_status: CUDNN_STATUS_NOT_SUPPORTED (Triggered internally at /opt/conda/conda-bld/pytorch_1712608847532/work/aten/src/ATen/native/cudnn/Conv_v8.cpp:919.)
  return F.conv2d(input, weight, bias, self.stride,
/home/apiasecz/.conda/envs/cog_fl_llm_env/lib/python3.12/site-packages/torch/autograd/graph.py:744: UserWarning: Plan failed with a cudnnException: CUDNN_BACKEND_EXECUTION_PLAN_DESCRIPTOR: cudnnFinalize Descriptor Failed cudnn_status: CUDNN_STATUS_NOT_SUPPORTED (Triggered internally at /opt/conda/conda-bld/pytorch_1712608847532/work/aten/src/ATen/native/cudnn/Conv_v8.cpp:919.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
0.8180277087315396 0.002666666666666667
Epoch 1/5, Loss: 0.8658
Epoch 2/5, Loss: 0.5776
Epoch 3/5, Loss: 0.5107
Epoch 4/5, Loss: 0.4726
Epoch 5/5, Loss: 0.4184
Round 0: Accuracy = 0.7266, Decision = 1, Drift = 0.2000
-0.17198047385765958 0.008666666666666666
Round 1: Accuracy = 0.6575, Decision = 0, Drift = 0.2000
0.12686411879564585 0.008
Epoch 1/5, Loss: 0.8538
Epoch 2/5, Loss: 0.8151
Epoch 3/5, Loss: 0.7347
Epoch 4/5, Loss: 0.7097
Epoch 5/5, Loss: 0.6796
Round 2: Accuracy = 0.5696, Decision = 1, Drift = 0.2000
-0.20234240888185306 0.014
Round 3: Accuracy = 0.6907, Decision = 0, Drift = 0.2000
0.07773839390796167 0.01333333333333333
Epoch 1/5, Loss: 0.8373
Epoch 2/5, Loss: 0.8462
Epoch 3/5, Loss: 0.7666
Epoch 4/5, Loss: 0.7183
Epoch 5/5, Loss: 0.7341
Round 4: Accuracy = 0.6719, Decision = 1, Drift = 0.2000
0.10780351691775847 0.01933333333333333
Epoch 1/5, Loss: 0.6958
Epoch 2/5, Loss: 0.7187
Epoch 3/5, Loss: 0.6844
Epoch 4/5, Loss: 0.6721
Epoch 5/5, Loss: 0.6548
Round 5: Accuracy = 0.6464, Decision = 1, Drift = 0.0000
-0.1801955170101589 0.02533333333333333
Round 6: Accuracy = 0.6972, Decision = 0, Drift = 0.0000
0.003321365073875149 0.024666666666666663
Round 7: Accuracy = 0.6972, Decision = 0, Drift = 0.0000
-0.0013417645736977235 0.023999999999999994
Round 8: Accuracy = 0.6972, Decision = 0, Drift = 0.0000
0.00014472007751464844 0.023333333333333327
Round 9: Accuracy = 0.6972, Decision = 0, Drift = 0.0000
-0.0002229092297730828 0.02266666666666666
Round 10: Accuracy = 0.6972, Decision = 0, Drift = 0.0000
0.001825563333652691 0.021999999999999992
Round 11: Accuracy = 0.6972, Decision = 0, Drift = 0.0000
0.0008991095754835587 0.021333333333333326
Round 12: Accuracy = 0.6972, Decision = 0, Drift = 0.0000
-0.0011815053445322077 0.02066666666666666
Round 13: Accuracy = 0.6972, Decision = 0, Drift = 0.0000
-0.002253119592313446 0.01999999999999999
Round 14: Accuracy = 0.6972, Decision = 0, Drift = 0.0000
Traceback (most recent call last):
  File "/home/apiasecz/programming/concept_drift_optimal_adaptation_FL/src/test_loss_behavior_under_drift.py", line 462, in <module>
    main()
  File "/home/apiasecz/programming/concept_drift_optimal_adaptation_FL/src/test_loss_behavior_under_drift.py", line 447, in main
    results = modify_retrain_with_policy_under_drift(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/apiasecz/programming/concept_drift_optimal_adaptation_FL/src/test_loss_behavior_under_drift.py", line 281, in modify_retrain_with_policy_under_drift
    client.apply_train_drift()
  File "/home/apiasecz/programming/Federated_Learning_Base_Toolkit_torch/fl_toolkit/federated/client.py", line 68, in apply_train_drift
    drifted_train = self.train_domain_drift.apply(self.original_train_loader.dataset)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/apiasecz/programming/Federated_Learning_Base_Toolkit_torch/fl_toolkit/data_operations/drift_handler.py", line 54, in apply
    all_target_indices = set(self._get_domain_indices(dataset, self.target_domains))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/apiasecz/programming/Federated_Learning_Base_Toolkit_torch/fl_toolkit/data_operations/drift_handler.py", line 30, in _get_domain_indices
    domain_indices = [i for i in range(len(dataset)) if dataset[i][2] == domain]
                                                        ~~~~~~~^^^
  File "/home/apiasecz/programming/Federated_Learning_Base_Toolkit_torch/fl_toolkit/data_operations/data_handler.py", line 259, in __getitem__
    image = self.transform(image)
            ^^^^^^^^^^^^^^^^^^^^^
  File "/home/apiasecz/.conda/envs/cog_fl_llm_env/lib/python3.12/site-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
          ^^^^^^
  File "/home/apiasecz/.conda/envs/cog_fl_llm_env/lib/python3.12/site-packages/torchvision/transforms/transforms.py", line 137, in __call__
    return F.to_tensor(pic)
           ^^^^^^^^^^^^^^^^
  File "/home/apiasecz/.conda/envs/cog_fl_llm_env/lib/python3.12/site-packages/torchvision/transforms/functional.py", line 174, in to_tensor
    img = img.permute((2, 0, 1)).contiguous()
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
